syntax = "proto3";
import "google/protobuf/empty.proto";

package net.almightshell.ecache.slavenode.services.proto3;

option java_multiple_files = true;

/**
 * Request & Response
 */

 message CacheRecordMessage {
        int64 key = 1;
        bytes data = 2;
 };
 
 message SlaveProcessSplitRequest {
         string adress = 1;
         int32 port = 2;
 };
 message SlaveProcessSplitResponse {
         bool success = 1;
 };
 
 enum AddRecordStatus{
     FAILED = 0;
     SUCESS = 1;
     UPDATE_METADATA = 2;
 }
 message AddRecordRequest {
        int64 key = 1;
        bytes data = 2;
        int32 splitVersion = 3;
 };
 
 message SlaveStatInfoMessage {
        int64 dataSize = 1;
        int64 maxMemory = 2;
        int64 availableMemory = 3;
 };
 
 message AddRecordResponse {
         AddRecordStatus status = 1;
 };
 
 message RecordKeyMessage {
        int64 key = 1;
 };
 message RecordDataMessage {
         bytes data = 1;
 };
 
 message DeleteAllRecordsRequest {
        repeated RecordKeyMessage keys = 1;
 };
 
   
/**
 * Service
 */
service SlaveNodeServices{
    rpc getSlaveStatInfo(google.protobuf.Empty) returns (SlaveStatInfoMessage);
    rpc slaveSendSplitData(stream CacheRecordMessage) returns (google.protobuf.Empty);
    rpc slaveProcessSplit(SlaveProcessSplitRequest) returns (SlaveProcessSplitResponse);
    rpc addRecord(AddRecordRequest) returns (AddRecordResponse);
    rpc getRecord(RecordKeyMessage) returns (RecordDataMessage);
    rpc deleteRecord(RecordKeyMessage) returns (google.protobuf.Empty);
    rpc deleteAllRecords(DeleteAllRecordsRequest) returns (google.protobuf.Empty);
}